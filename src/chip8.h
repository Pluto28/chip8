#include <stdint.h>

#define STACK_SIZE 16
#define MAX_RAM 0xFFF
#define START_ADDRS 0X200

#define GFX_WIDTH 64
#define GFX_HEIGHT 32
#define GFX_SIZE GFX_WIDTH * GFX_HEIGHT

#define FONTSET_ADDRESS 0x00
#define FONTSET_BYTES_PER_CHAR 5
uint8_t fonts[] = {
    0xF0, 0x90, 0x90, 0x90, 0xF0,   // 0
    0x20, 0x60, 0x20, 0x20, 0x70,   // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0,   // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0,   // 3
    0x90, 0x90, 0xF0, 0x10, 0x10,   // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0,   // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0,   // 6
    0xF0, 0x10, 0x20, 0x40, 0x40,   // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0,   // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0,   // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90,   // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0,   // B
    0xF0, 0x80, 0x80, 0x80, 0xF0,   // C
    0xE0, 0x90, 0x90, 0x90, 0xE0,   // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0,   // E
    0xF0, 0x80, 0xF0, 0x80, 0x80    // F
};

uint8_t gfx[GFX_HEIGHT][GFX_WIDTH];

// program counter
uint16_t PC;

// stack pointer
uint16_t SP;

// stack levels
uint16_t stack[STACK_SIZE];

// store the opcode to be executed
uint16_t opcode;

// registers V0-VF
uint8_t reg[16];

// array of addressable ram memory
uint8_t ram[MAX_RAM];

// address register
uint16_t I;

// delay timer
uint8_t DT;

// sound timer
uint8_t ST;

// initialize memory and registers and load game into memory
void initialize();

// execute opcodes in RAM linearly
void game_loop();

// load game into ram
void load_game(FILE *filep);